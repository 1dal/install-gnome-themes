#!/bin/bash

#
# This script installs the latest versions of some fine GNOME themes into the current user's ".themes" folder.
#
# Get the most recent version of this script at:
#
#     https://github.com/tliron/install-gnome-themes
#
# Copyright 2016 by Tal Liron. MIT-style license:
#
#     https://github.com/tliron/install-gnome-themes/blob/master/LICENSE
#

set -e

#
# Build output is supressed by default. If you want to see it, set the LOG environment var:
#
# LOG=/dev/stdout ./install-gnome-themes
#
# Or:
#
# LOG=output.log ./install-gnome-themes
#

RED='\033[0;31m'
RESET='\033[0m'
LOG=${LOG:-/dev/null}

#
# Preparation
#

function write()
{
	echo -e "${RED}$1$RESET"
	if [ "$LOG" != '/dev/stdout' ]; then
		echo "$1" >> "$LOG"
	fi
}

GNOME_VERSION=$(gnome-shell --version | cut -d ' ' -f3 | cut -d '.' -f1,2)

if [ "$GNOME_VERSION" != '3.20' ] && [ "$GNOME_VERSION" != '3.18' ]; then
	write 'This script only supports GNOME 3.20 and GNOME 3.18.'
	exit 1
fi

write "Detected GNOME $GNOME_VERSION."

OS=$(lsb_release -si)

write "Detected $OS operating system."

write "Verifying that build requirements are installed..."

if [ "$OS" == 'Ubuntu' ] || [ "$OS" == 'Debian' ]; then
	# Ubuntu GNOME comes with Numix (for 3.18) preinstalled, we will remove it to avoid confusion
	sudo apt -y remove numix-gtk-theme &>> "$LOG"
	# Install our build and usage requirements
	# Note: Inkscape is required for building Adapta
	sudo apt -y install \
		git autoconf automake pkg-config \
		libgtk-3-dev libglib2.0-dev libxml2-utils \
		gnome-themes-standard gtk2-engines-murrine gtk2-engines-pixbuf \
		ruby ruby-bundler \
		inkscape \
		fonts-roboto &>> "$LOG"
else
	write 'This script only supports Ubuntu and Debian.'
	exit 1
fi

# SASS is used by many themes to generate CSS
sudo gem install sass &>> "$LOG"

mkdir -p ~/.themes

#
# Utilities
#

function timestamp()
{
	git log -1 --date=short --pretty=format:%cd
}

function prepare()
{
	write "Fetching latest version of $2..."
	cleanup "$2"
	cd /tmp
	# Shallow git clone is faster
	git clone "https://github.com/$1/$2" -b "$3" --depth 1 --quiet
	cd "$2"
	write "Installing $2, last updated on $(timestamp)..."
	rm -rf "~/.themes/$4"*
}

function cleanup()
{
	rm -rf "/tmp/$1"
}

function theme-cp()
{
	prepare "$@"
	cp -r "$4" ~/.themes/
	cleanup "$2"
}

function theme-cp-all()
{
	prepare "$@"
	cp -r "$4"* ~/.themes/
	cleanup "$2"
}

function theme-make()
{
	prepare "$@"
	make install INSTALL_DIR="~/.themes/$4" &>> "$LOG"
	cleanup "$2"
}

function theme-autogen-prefix()
{
	prepare "$@"
	./autogen.sh --prefix=$(pwd) "${@:5}" &>> "$LOG"
	make &>> "$LOG"
	# Adapta needs to run "make install" separately
	make install &>> "$LOG"
	cp -r share/themes/* ~/.themes/
	cleanup "$2"
}

function theme-autogen-destdir()
{
	prepare "$@"
	./autogen.sh "${@:5}" &>> "$LOG"
	make install DESTDIR=$(pwd) &>> "$LOG"
	cp -r usr/share/themes/* ~/.themes/
	cleanup "$2"
}

#
# Themes
#

#
# Note that some themes support extra configuration settings.
#
# For example, this will create a variant of Adapta with colors red500, red300, bluegrey300, bluegrey500:
#
# theme-autogen-prefix tista500 Adapta master Adapta \
#	--with-selection_color=#F44336 \
#	--with-second_selection_color=#E57373 \
#	--with-accent_color=#90A4AE \
#	--with-suggestion_color=#607D8B
#
# This will create a variant of Arc without transparency:
#
# theme-autogen-prefix horst3180 arc-theme master Arc \
#	--disable-transparency
#

theme-autogen-prefix tista500 Adapta master Adapta
theme-autogen-prefix horst3180 arc-theme master Arc
if [ "$GNOME_VERSION" = '3.20' ]; then
	theme-cp-all killhellokitty Candra-Themes-3.20 master Candra-Theme-3.20
fi
if [ "$GNOME_VERSION" = '3.18' ]; then
	theme-autogen-prefix horst3180 ceti-2-theme master Ceti-2
fi
if [ "$GNOME_VERSION" = '3.20' ]; then
	theme-cp-all killhellokitty Cloak-3.20 master Cloak-3.20
fi
if [ "$GNOME_VERSION" = '3.18' ]; then
	theme-cp killhellokitty DeLorean-Dark-3.18 master DeLorean-Dark-3.18
fi
theme-make numixproject numix-gtk-theme master Numix
theme-autogen-destdir snwh paper-gtk-theme master Paper
theme-autogen-prefix horst3180 vertex-theme master Vertex
if [ "$GNOME_VERSION" = '3.20' ]; then
	theme-cp-all lassekongo83 zuki-themes master Zuki
elif [ "$GNOME_VERSION" = '3.18' ]; then
	theme-cp-all lassekongo83 zuki-themes 3.18 Zuki
fi

write "Done!"
